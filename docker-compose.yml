version: "3.8"

services:
  react-app:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - db
      - api
    networks:
      - app-network

  api:
    build:
      context: ./rest_api             # Путь к Dockerfile
    ports:
      - "${API_PORT}:${API_PORT}"                  # Проброс порта для веб-приложения
    volumes:
      #- ./config:/config         # монтируем папку для просмотра внутри контейнера
      #- ./frontend:/frontend
    environment:
      # - DB_HOST=${DB_HOST}
      # - DB_PORT=${DB_PORT}
      #- DB_USER=${DB_USER}
      #- DB_PASSWORD=${DB_PASSWORD}
      #- DB_NAME=${DB_NAME}
      # - API_PORT=${API_PORT}
    depends_on:
      - db                           # Сначала запускается база данных
    networks:
      - app-network

  db:
    image: postgres:alpine           # Готовый образ PostgreSQL для Alpine
    environment:
      POSTGRES_USER: ${DB_USER}   # Пользователь базы данных
      POSTGRES_PASSWORD: ${DB_PASSWORD} # Пароль пользователя
      POSTGRES_DB: ${DB_NAME}          # Имя базы данных
    ports:
      - "${DB_PORT}:5432"                  # Проброс порта для PostgreSQL
    volumes:
      - db_data:/var/lib/postgresql/data # Том для хранения данных
      - ./initdb:/docker-entrypoint-initdb.d # все скрипты из этой папки должны выполняться
    #restart: always                  # Перезапуск при сбое
    networks:
      - app-network

volumes:
  db_data:                           # Том для базы данных

networks:
  app-network: